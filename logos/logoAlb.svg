<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg5"
   inkscape:version="1.1.1 (3bf5ae0d25, 2021-09-20)"
   sodipodi:docname="logo.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:snap-to-guides="false"
     inkscape:snap-grids="false"
     inkscape:zoom="0.72337262"
     inkscape:cx="311.73422"
     inkscape:cy="416.79764"
     inkscape:window-width="1920"
     inkscape:window-height="1001"
     inkscape:window-x="1271"
     inkscape:window-y="-9"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer2" />
  <defs
     id="defs2">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient59024"
       gradientUnits="userSpaceOnUse"
       x="34.321903"
       y="83.009979"
       gradientTransform="translate(24.871918,-4.023399)">
      <meshrow
         id="meshrow59026">
        <meshpatch
           id="meshpatch59028">
          <stop
             path="c 19.2402,0  38.4805,0  57.7207,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop59030" />
          <stop
             path="c 0,26.201  0,52.4021  0,78.6031"
             style="stop-color:#afe9c6;stop-opacity:1"
             id="stop59032" />
          <stop
             path="c -19.2402,0  -38.4805,0  -57.7207,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop59034" />
          <stop
             path="c 0,-26.201  0,-52.4021  0,-78.6031"
             style="stop-color:#afe9c6;stop-opacity:1"
             id="stop59036" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1" />
  <g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="Capa 3">
    <path
       style="fill:#ffeeaa;stroke-width:0.30249"
       d="m 130.06382,161.53198 c -8.27057,-1.64863 -14.79666,-5.0731 -20.69547,-10.85964 -3.35301,-3.2892 -5.2306,-5.86677 -7.34992,-10.09002 -4.075582,-8.12158 -4.831602,-17.29819 -2.180622,-26.46825 0.833272,-2.88234 3.860142,-8.7345 5.867212,-11.34367 2.13763,-2.778884 6.09891,-6.521521 8.99091,-8.494648 6.96444,-4.751631 14.34344,-6.973981 23.15611,-6.973981 10.56587,0 19.56541,3.36475 27.11547,10.137934 6.03884,5.417465 10.04476,12.254835 11.70405,19.976645 0.66704,3.10424 0.66704,11.50533 0,14.60956 -3.25977,15.16997 -15.66969,26.75245 -31.76558,29.64759 -3.71819,0.66878 -11.13182,0.59809 -14.84216,-0.14152 z m 14.71946,-4.56929 c 8.29848,-1.61722 15.81833,-6.10424 20.91461,-12.47952 2.03006,-2.53955 4.74057,-7.76519 5.70441,-10.99763 5.13769,-17.23032 -5.51329,-35.460058 -23.62798,-40.440607 -4.17342,-1.147464 -6.64521,-1.413218 -11.45172,-1.231229 -5.66034,0.214317 -9.07167,1.028467 -13.83153,3.301045 -3.48206,1.6625 -5.75508,3.216903 -8.76099,5.991181 -4.61333,4.25783 -7.83529,9.46976 -9.44816,15.28354 -1.14146,4.11457 -1.35066,10.54379 -0.47243,14.51912 2.42314,10.96839 9.83897,19.66945 20.48654,24.03704 6.34153,2.60127 13.74778,3.33045 20.48725,2.01706 z m -16.69019,-3.02708 c -7.59404,-2.02909 -14.29509,-6.99416 -13.51548,-10.01415 0.11149,-0.43191 1.2067,-1.71613 2.4338,-2.85382 4.19762,-3.89182 15.58303,-13.17936 16.90758,-13.79222 1.25667,-0.58145 1.35004,-0.58645 1.86329,-0.0999 0.89207,0.84573 1.03203,7.70756 0.33389,16.36998 -0.62603,7.76772 -0.99418,9.23368 -2.56393,10.20953 -1.17574,0.73092 -3.15445,0.79636 -5.45915,0.18056 z m 12.50145,-0.0376 c -0.55406,-0.12479 -1.21017,-0.38659 -1.45804,-0.58176 -0.6761,-0.53238 -1.06101,-2.83173 -1.45749,-8.70684 -0.56922,-8.43487 -0.64748,-11.01479 -0.42237,-13.92323 0.24633,-3.18253 0.73968,-4.06983 2.08477,-3.74952 1.95132,0.46467 15.35941,11.4981 18.02076,14.82918 1.18845,1.48752 1.4751,2.07489 1.4751,3.02251 0,2.52085 -1.7867,4.17403 -7.2912,6.74633 -5.14809,2.40575 -8.01572,3.02458 -10.95153,2.36333 z m 19.6402,-12.24647 c -1.81087,-1.15492 -3.31703,-2.32994 -10.46159,-8.16154 -9.97855,-8.14478 -10.36286,-8.79018 -5.82062,-9.77484 2.69237,-0.58364 16.874,-1.94464 20.16405,-1.93512 4.32775,0.0125 5.86798,1.01192 6.36033,4.12701 0.37803,2.39176 -2.46888,11.33753 -4.35451,13.6831 -1.05989,1.3184 -2.69716,2.48392 -3.77718,2.68886 -0.62806,0.11917 -1.21197,-0.0544 -2.11048,-0.62747 z m -49.37703,-2.18347 c -1.84341,-0.71942 -3.1364,-2.70711 -4.35387,-6.69315 -1.28334,-4.2017 -1.80575,-7.87823 -1.37177,-9.65414 1.08886,-4.45578 1.58301,-4.58022 11.70682,-2.94827 17.45744,2.81414 18.5998,3.17519 16.98158,5.36718 -0.74758,1.01265 -9.76075,7.75816 -13.93932,10.43227 -5.28991,3.38532 -7.3059,4.16641 -9.02344,3.49611 z m 30.74419,-16.77615 c -0.83612,-0.17761 -0.92819,-0.30837 -0.89798,-1.27536 0.0796,-2.54772 11.17709,-18.94064 13.90513,-20.5403 1.2273,-0.71966 3.25012,-0.80059 4.51381,-0.18058 1.2483,0.61246 3.55212,3.12022 5.69553,6.1997 2.70804,3.89073 3.3957,5.31934 3.57382,7.42465 0.20236,2.39198 -0.25749,3.4497 -1.74536,4.01454 -1.496,0.56792 -6.74314,1.66781 -14.79689,3.10168 -7.60727,1.35438 -8.98735,1.52347 -10.24806,1.25567 z m -14.1299,-1.53706 c -6.10903,-1.76313 -14.20381,-4.67424 -16.14261,-5.80531 -4.39771,-2.56557 -3.62704,-5.60842 3.09962,-12.2382 3.93992,-3.883208 5.62101,-4.899988 8.10951,-4.904988 2.41206,-0.005 2.34636,-0.103108 8.56789,12.813988 1.9513,4.05131 3.76998,8.12343 4.04151,9.04916 0.9141,3.11657 -0.12766,3.26387 -7.67592,1.08535 z m 9.52706,-0.63235 c -0.7682,-0.97742 -3.61233,-7.49699 -5.23783,-12.0066 -1.7366,-4.81781 -2.73649,-8.618794 -2.73649,-10.402395 0,-1.610634 0.0861,-1.832683 1.04293,-2.688847 1.43422,-1.283362 2.94604,-1.638508 7.06885,-1.660558 6.67519,-0.0357 11.04829,1.043623 13.06703,3.225067 0.78162,0.844619 0.9077,1.185475 0.76583,2.070275 -0.2332,1.454258 -10.18158,20.275648 -11.34469,21.463058 -0.51589,0.52667 -1.14836,0.95758 -1.4055,0.95758 -0.25714,0 -0.8062,-0.43091 -1.22013,-0.95758 z"
       id="path58483" />
    <path
       style="fill:#ff8080;stroke-width:0.331023"
       d="m 165.10322,157.50296 c -3.86916,-2.33461 -8.79412,-7.77405 -11.50728,-12.70938 -3.71689,-6.76115 -5.90122,-15.44143 -5.90171,-23.45278 -2.8e-4,-4.49394 0.64543,-8.20866 2.02518,-11.65078 2.32638,-5.8037 7.56587,-10.639525 13.17521,-12.160144 3.93936,-1.067908 6.92743,-0.576151 14.14287,2.32755 1.6166,0.650564 2.23328,0.773154 2.32537,0.462274 0.0689,-0.23269 0.20112,-1.718915 0.29374,-3.302704 0.18151,-3.103561 1.0936,-6.217471 2.60997,-8.910445 1.22491,-2.175375 5.12956,-6.948508 8.19054,-10.012306 5.18268,-5.187446 5.78286,-5.577761 7.07026,-4.598012 0.53629,0.408131 0.33684,0.650086 -2.29043,2.778524 -5.92571,4.800638 -10.64096,10.452143 -12.09483,14.496377 -1.25847,3.500692 -1.78627,9.470396 -0.86968,9.836466 0.25233,0.10077 1.45694,-0.26926 2.67692,-0.822304 3.97539,-1.80212 6.56969,-2.487639 10.12057,-2.674258 5.56371,-0.292406 9.14382,0.958626 12.39628,4.331752 4.0913,4.24309 6.07263,10.0098 6.76589,19.69234 1.0598,14.80182 -4.72737,29.14643 -14.38531,35.65673 -1.97698,1.33266 -2.49843,1.52686 -4.40003,1.6387 -1.79951,0.10582 -2.63796,-0.0518 -5.05602,-0.95074 -5.02207,-1.86692 -6.22822,-2.12037 -9.22602,-1.93869 -2.18666,0.13251 -3.48978,0.4551 -6.29014,1.55712 -2.93796,1.15616 -3.9204,1.38943 -5.84054,1.3868 -1.95432,-0.003 -2.55731,-0.15334 -3.93081,-0.98209 z m 30.00472,-61.786089 c -2.62189,-0.873385 -5.53949,-2.586309 -7.46925,-4.385188 l -1.6938,-1.578926 0.89636,-1.841005 c 1.86004,-3.820271 7.17024,-8.382036 11.17391,-9.599021 2.46656,-0.749757 4.3869,-0.669881 7.52949,0.313187 5.50326,1.721533 9.91323,2.821362 12.20455,3.043764 1.29385,0.125583 2.35245,0.300809 2.35245,0.38939 0,0.08858 -0.98559,1.303811 -2.19021,2.70051 -4.29072,4.974923 -10.43709,9.775406 -13.98658,10.923903 -2.59941,0.841083 -6.34961,0.855283 -8.81692,0.03339 z m -21.0905,-2.020778 c -7.4067,-2.517109 -11.2076,-6.349709 -12.60576,-12.710885 -0.43115,-1.961572 -1.05401,-8.006273 -0.84718,-8.221539 0.0773,-0.08048 1.27619,0.268487 2.66413,0.775484 8.88334,3.244961 13.51241,9.347242 14.27534,18.818475 0.21896,2.718247 0.38546,2.654328 -3.48653,1.338465 z"
       id="path58852" />
    <path
       style="fill:url(#meshgradient59024);fill-opacity:1;stroke-width:0.330903"
       d="m 77.4324,157.04974 c -3.36124,-0.7807 -9.17165,-3.31177 -11.45688,-4.99073 -4.801406,-3.5276 -7.215926,-8.5944 -6.717376,-14.09625 0.29605,-3.26728 1.27317,-5.69216 5.13144,-12.73462 4.733266,-8.63956 5.337776,-10.57671 5.967226,-19.12166 0.62351,-8.464115 2.03189,-10.175645 9.49028,-11.533025 1.57412,-0.28648 2.16806,-0.53176 2.16806,-0.89539 0,-0.84058 -1.94642,-5.62595 -3.12175,-7.67494 -1.90365,-3.31875 -1.26717,-5.217717 2.30363,-6.872867 0.70904,-0.32865 0.86973,-0.2066 2.08585,1.58441 0.7247,1.067277 1.37056,1.998827 1.43525,2.070117 0.0647,0.0713 1.42624,-0.36571 3.02567,-0.97111 4.61327,-1.746177 5.51213,-1.938147 9.07715,-1.938687 5.34004,-7.9e-4 9.69368,1.644997 14.14994,5.349077 2.31335,1.92288 5.94366,6.26097 5.94366,7.10246 0,0.53565 -0.68132,0.67124 -5.2878,1.05236 -9.68181,0.80104 -18.35479,-1.13343 -23.71269,-5.289 -0.91778,-0.71183 -1.66868,-1.18841 -1.66868,-1.05908 0,0.24465 0.96319,5.08201 1.23604,6.20773 0.12645,0.52167 0.60146,0.71605 2.50525,1.02513 3.99683,0.64889 6.82605,2.296826 8.33353,4.85402 0.61272,1.039355 0.8032,2.257925 1.16535,7.454715 0.49411,7.09066 0.76282,7.96824 3.67931,12.01588 10.45812,14.51434 11.24845,25.04686 2.46907,32.9045 -2.11272,1.8909 -3.2459,2.618 -5.6403,3.61909 -4.69224,1.96177 -6.70691,2.31985 -13.74825,2.44356 -5.28268,0.0928 -6.54898,0.0201 -8.81298,-0.50569 z"
       id="path58686" />
    <path
       style="fill:#c6afe9;stroke-width:0.360244"
       d="m 9.6811133,159.41457 c 7.1064597,5.43419 16.4250397,-1.72668 13.0840397,-10.05444 -2.66178,-6.63483 -11.59894,-7.6162 -15.2014897,-1.66927 -1.56988,2.59149 -1.74889,4.67962 -0.66083,7.70826 0.87571,2.43749 1.05657,2.69887 2.77828,4.01545 z m 5.0657297,-22.74894 c 1.37846,1.59206 5.05309,3.00658 7.21909,2.7789 3.97393,-0.41771 6.9156,-3.30766 7.49582,-7.36402 0.2791,-1.9513 0.19753,-2.57989 -0.58174,-4.48317 -2.00635,-4.90009 -6.56304,-6.90102 -11.28861,-4.95699 -5.50925,2.26639 -6.93578,9.3001 -2.84456,14.02528 z m 14.19988,16.75042 c 3.66278,4.26708 9.32773,4.58955 12.83988,0.73086 3.36209,-3.69381 3.11636,-9.24993 -0.55578,-12.56694 -6.01894,-5.43686 -15.06702,-0.78079 -14.21761,7.31627 0.25708,2.45081 0.35599,2.68202 1.93355,4.51979 z m -8.62633,-39.32253 c 3.52677,4.42732 9.76198,4.75499 13.26019,0.69684 3.99178,-4.6307 2.42731,-11.54525 -3.16947,-14.00822 -5.81834,-2.56047 -12.22103,1.97244 -11.88775,8.41616 0.0822,1.58883 0.86766,3.72853 1.79703,4.89522 z m 15.31413,18.24087 c 2.45286,2.46436 6.11659,3.20767 9.35551,1.89809 4.60289,-1.86065 6.52275,-6.51839 4.63067,-11.23271 -1.89645,-4.72522 -6.6373,-6.83104 -11.20626,-4.97768 -2.57815,1.0458 -3.98954,2.58137 -4.8466,5.27297 -0.95622,3.00303 -0.066,6.89667 2.06668,9.03933 z m 13.51082,16.0166 c 2.94701,4.05081 8.70407,5.1274 12.36344,2.31201 2.91158,-2.24007 4.18336,-6.97487 2.7871,-10.37632 -1.69485,-4.12901 -6.12793,-6.43102 -10.34997,-5.37462 -3.37138,0.84357 -6.3573,4.64444 -6.3542,8.08847 0.002,1.68424 0.74223,4.23517 1.55363,5.35046 z m -8.059,-38.73656 c 3.33361,4.0085 8.41654,4.67494 12.23043,1.60356 4.35344,-3.50587 4.33688,-9.95164 -0.035,-13.63056 -5.45527,-4.59056 -13.42513,-1.2743 -13.97806,5.81627 -0.13627,1.74744 0.80867,5.03956 1.78266,6.21073 z m 14.1222,16.62342 c 1.06842,1.7235 2.22154,2.69594 4.09441,3.45287 2.41246,0.97501 4.05025,0.9803 6.45244,0.0209 2.55183,-1.01926 3.97027,-2.51562 4.82617,-5.0915 0.76481,-2.30173 0.71235,-3.9397 -0.19805,-6.18406 -1.37036,-3.37827 -4.07069,-5.29909 -7.80881,-5.55462 -3.42824,-0.23435 -6.14808,1.41138 -7.71946,4.67092 -1.45794,3.02422 -1.33868,5.95618 0.3533,8.68553 z m 4.00549,-18.80737 c 0.45425,0.38239 1.36291,0.70476 2.01926,0.71639 1.63224,0.0289 2.81802,-0.99685 5.3437,-4.62262 1.11235,-1.59684 2.2829,-3.2306 2.60125,-3.63056 0.87865,-1.10396 2.61269,-1.2519 4.1765,-0.35633 4.06439,2.32763 3.9167,2.28121 5.37537,1.68951 1.10648,-0.44883 1.46603,-0.8152 1.78986,-1.82378 0.95753,-2.9823 -2.49173,-6.44429 -7.48751,-7.51512 l -1.00589,-0.21562 0.30573,-1.36875 c 0.96462,-4.31864 0.44549,-12.24796 -1.04194,-15.91482 -0.71533,-1.76347 -0.97666,-2.07617 -2.17629,-2.60409 -1.52376,-0.67057 -2.69657,-0.37157 -3.82149,0.97424 -0.86498,1.03481 -0.87179,1.3901 -0.0988,5.14705 1.68625,8.19543 -0.007,15.66517 -5.11076,22.54412 -1.10722,1.49237 -2.10373,3.1342 -2.21447,3.64853 -0.24915,1.1572 0.26006,2.41818 1.34511,3.33199 z"
       id="path77500" />
    <rect
       style="fill:#b7bec8;fill-opacity:0.207273;stroke:none;stroke-width:0.250477;stroke-opacity:1"
       id="rect78157"
       width="185.59781"
       height="51.247154"
       x="19.440075"
       y="103.11751" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Capa 2">
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:50.8px;line-height:1.25;font-family:'MV Boli';-inkscape-font-specification:'MV Boli';fill:#000000;fill-opacity:1;stroke:#160000;stroke-width:0.991;stroke-opacity:0.43272728;stroke-miterlimit:4;stroke-dasharray:none"
       x="21.77504"
       y="134.4864"
       id="text4587"
       transform="scale(0.96925879,1.0317162)"><tspan
         sodipodi:role="line"
         id="tspan4585"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:50.8px;font-family:'Colonna MT';-inkscape-font-specification:'Colonna MT';fill:#000000;stroke-width:0.991;fill-opacity:1;stroke:#160000;stroke-opacity:0.43272728;stroke-miterlimit:4;stroke-dasharray:none"
         x="21.77504"
         y="134.4864">eatFruits</tspan></text>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
